{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Uphawu project",
        "description": "Generator of QRCodes",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "uphawu-brenco.herokuapp.com",
    "basePath": "/",
    "tags": [
        {
            "name": "Etablissement",
            "description": "Tous sur l'etablissement "
        },
        {
            "name": "Client",
            "description": "Les diff√©rents endpoits de la gestion des clients."
        },
        {
            "name": "Signataire",
            "description": "Signataire endpoints "
        },
        {
            "name": "Offre",
            "description": "Offre endpoints"
        },
        {
            "name": "Coupon",
            "description": "Coupons"
        }
    ],
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/admin/etablissement": {
            "post": {
                "tags": [
                    "Etablissement"
                ],
                "summary": "Create new etbalissement.",
                "description": "",
                "operationId": "addEtablissement",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Etablissement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Etablissement"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "Etablissement"
                ],
                "summary": "get all etablissements",
                "description": "",
                "operationId": "getAllEtablissement",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Etablissement",
                                "id_etab": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/etablissement/{id_etablissement}": {
            "get": {
                "tags": [
                    "Etablissement"
                ],
                "summary": "Get one etablissement",
                "description": "",
                "operationId": "getOneEtablissement",
                "parameters": [
                    {
                        "name": "id_etablissement",
                        "in": "path",
                        "description": "ID of the etablissement to return",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Etablissement"
                        }
                    },
                    "404": {
                        "description": "Etablissement not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Etablissement"
                ],
                "summary": "update etablissement",
                "description": "",
                "operationId": "updateEtablissement",
                "parameters": [
                    {
                        "name": "id_etablissement",
                        "in": "path",
                        "description": "ID of the etablissement to update",
                        "type": "integer",
                        "fomrat": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Etablissement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Etablissement"
                        }
                    },
                    "404": {
                        "description": "Etablissement not found"
                    },
                    "402": {
                        "description": "Input validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Etablissement"
                ],
                "summary": "delete etablissement (not implemented yet)",
                "description": "",
                "operationId": "deleteEtablissement",
                "parameters": [
                    {
                        "name": "id_etablissement",
                        "in": "path",
                        "description": "ID of the etablissement to delete",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "establissement successfully deleted"
                    },
                    "404": {
                        "description": "Etablissement not found"
                    }
                }
            }
        },
        "/admin/client": {
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Create new client.",
                "description": "",
                "operationId": "addClient",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    },
                    "402": {
                        "description": "Inputs validation errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get all clients",
                "description": "",
                "operationId": "getAllClients",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Client"
                            }
                        }
                    }
                }
            }
        },
        "/admin/client/{id_client}": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get one client",
                "description": "",
                "operationId": "getOneClient",
                "parameters": [
                    {
                        "name": "id_client",
                        "in": "path",
                        "description": "ID of the client to return",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Client"
                ],
                "summary": "update client",
                "description": "",
                "operationId": "updateClient",
                "parameters": [
                    {
                        "name": "id_client",
                        "in": "path",
                        "description": "ID of the client to update",
                        "type": "integer",
                        "fomrat": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "402": {
                        "description": "Input validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Client"
                ],
                "summary": "delete client (not implemented yet)",
                "description": "",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "id_client",
                        "in": "path",
                        "description": "ID of the client to delete",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client successfully deleted"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/admin/offre": {
            "post": {
                "tags": [
                    "Offre"
                ],
                "summary": "Create new offre.",
                "description": "",
                "operationId": "addOffre",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Offre"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Offre"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "Offre"
                ],
                "summary": "get all Offres",
                "description": "",
                "operationId": "getAllOffres",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Offre"
                            }
                        }
                    }
                }
            }
        },
        "/admin/offre/{id_offre}": {
            "get": {
                "tags": [
                    "Offre"
                ],
                "summary": "Get one offre",
                "description": "",
                "operationId": "getOneOffre",
                "parameters": [
                    {
                        "name": "id_offre",
                        "in": "path",
                        "description": "ID of the offre to return",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Offre"
                        }
                    },
                    "404": {
                        "description": "Offre not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Offre"
                ],
                "summary": "update Offre",
                "description": "",
                "operationId": "updateOffre",
                "parameters": [
                    {
                        "name": "id_offre",
                        "in": "path",
                        "description": "ID of the offre to update",
                        "type": "integer",
                        "fomrat": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Offre"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Offre"
                        }
                    },
                    "404": {
                        "description": "Offre not found"
                    },
                    "402": {
                        "description": "Input validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Offre"
                ],
                "summary": "delete Offre (not implemented yet)",
                "description": "",
                "operationId": "deleteOffre",
                "parameters": [
                    {
                        "name": "id_offre",
                        "in": "path",
                        "description": "ID of the offre to delete",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offre successfully deleted"
                    },
                    "404": {
                        "description": "Offre not found"
                    }
                }
            }
        },
        "/admin/coupon": {
            "post": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Create new coupon.",
                "description": "",
                "operationId": "addCoupon",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Etablissement"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "get all coupons",
                "description": "",
                "operationId": "getAllCoupons",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Coupon"
                            }
                        }
                    }
                }
            }
        },
        "/admin/coupon/{id_coupon}": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Get one coupon",
                "description": "",
                "operationId": "getOneCoupon",
                "parameters": [
                    {
                        "name": "id_coupon",
                        "in": "path",
                        "description": "ID of the coupon to return",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "404": {
                        "description": "Coupon not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Coupon"
                ],
                "summary": "update Coupon",
                "description": "",
                "operationId": "updateCoupon",
                "parameters": [
                    {
                        "name": "id_coupon",
                        "in": "path",
                        "description": "ID of the coupon to update",
                        "type": "integer",
                        "fomrat": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "404": {
                        "description": "Coupon not found"
                    },
                    "402": {
                        "description": "Input validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Coupon"
                ],
                "summary": "delete Coupon (not implemented yet)",
                "description": "",
                "operationId": "deleteCoupon",
                "parameters": [
                    {
                        "name": "id_coupon",
                        "in": "path",
                        "description": "ID of the coupon to delete",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon successfully deleted"
                    },
                    "404": {
                        "description": "Coupon not found"
                    }
                }
            }
        },
        "/admin/type-paiment": {
            "post": {
                "tags": [
                    "TypePaiment"
                ],
                "summary": "Create new type-paiment.",
                "description": "",
                "operationId": "addTypePaiment",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TypePaiment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TypePaiment"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "TypePaiment"
                ],
                "summary": "get all typePaiment",
                "description": "",
                "operationId": "getAllTypePaiment",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TypePaiment"
                            }
                        }
                    }
                }
            }
        },
        "/admin/type-paiment/{id_type}": {
            "delete": {
                "tags": [
                    "TypePaiment"
                ],
                "summary": "delete TypePaiment (not implemented yet)",
                "description": "",
                "operationId": "deleteTypePaiment",
                "parameters": [
                    {
                        "name": "id_type",
                        "in": "path",
                        "description": "ID of the typePaiment to delete",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TypePaiment successfully deleted"
                    },
                    "404": {
                        "description": "TypePaiment not found"
                    }
                }
            }
        },
        "/client/signataire": {
            "post": {
                "tags": [
                    "Signataire"
                ],
                "summary": "Create new signataire.",
                "description": "",
                "operationId": "addSignataire",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Signataire"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Signataire"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "Signataire"
                ],
                "summary": "get all signataires",
                "description": "",
                "operationId": "getAllSignataire",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Signataire"
                            }
                        }
                    }
                }
            }
        },
        "/client/signataire/{id_signataire}": {
            "get": {
                "tags": [
                    "Signataire"
                ],
                "summary": "Get one signataire",
                "description": "",
                "operationId": "getOneSignataire",
                "parameters": [
                    {
                        "name": "id_signataire",
                        "in": "path",
                        "description": "ID of the signataire to return",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Signataire"
                        }
                    },
                    "404": {
                        "description": "Signataire not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Signataire"
                ],
                "summary": "update Signataire",
                "description": "",
                "operationId": "updateSignataire",
                "parameters": [
                    {
                        "name": "id_signataire",
                        "in": "path",
                        "description": "ID of the signataire to update",
                        "type": "integer",
                        "fomrat": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Signataire"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Signataire"
                        }
                    },
                    "404": {
                        "description": "Signataire not found"
                    },
                    "402": {
                        "description": "Input validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Signataire"
                ],
                "summary": "delete Signataire (not implemented yet)",
                "description": "",
                "operationId": "deleteSignataire",
                "parameters": [
                    {
                        "name": "id_signataire",
                        "in": "path",
                        "description": "ID of the signataire to delete",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Signataire successfully deleted"
                    },
                    "404": {
                        "description": "Signataire not found"
                    }
                }
            }
        },
        "/client/theme": {
            "post": {
                "tags": [
                    "Theme"
                ],
                "summary": "Create new theme.",
                "description": "",
                "operationId": "addTheme",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Theme"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Theme"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "Theme"
                ],
                "summary": "get all themes",
                "description": "",
                "operationId": "getAllTheme",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Theme"
                            }
                        }
                    }
                }
            }
        },
        "/client/theme/{id_theme}": {
            "delete": {
                "tags": [
                    "Theme"
                ],
                "summary": "delete Theme (not implemented yet)",
                "description": "",
                "operationId": "deleteTheme",
                "parameters": [
                    {
                        "name": "id_theme",
                        "in": "path",
                        "description": "ID of the theme to delete",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Theme successfully deleted"
                    },
                    "404": {
                        "description": "Theme not found"
                    }
                }
            }
        },
        "/client/compagne": {
            "post": {
                "tags": [
                    "Compagne"
                ],
                "summary": "Create new compagne.",
                "description": "",
                "operationId": "addCompagne",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Compagne"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Compagne"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "Compagne"
                ],
                "summary": "get all compagne",
                "description": "",
                "operationId": "getAllCompagne",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Compagne"
                            }
                        }
                    }
                }
            }
        },
        "/client/signataire-compagne": {
            "post": {
                "tags": [
                    "CompagneSignataire"
                ],
                "summary": "relating the signataires to the compagne.",
                "description": "you must send an array of signataires whom wants to be in the compagne selected every element must contains the nom and prenom of the signataire",
                "operationId": "addSignatairesToCompagne",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompagneSignataire"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CompagneSignataire"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/client/classe": {
            "post": {
                "tags": [
                    "Classe"
                ],
                "summary": "create classe for the compagne.",
                "description": "must passing a signataire which is in the compagne that holds the classe.",
                "operationId": "addClasse",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Classe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Classe"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            }, "get": {
                "tags": [
                    "Classe"
                ],
                "summary": "get all compagne",
                "description": "",
                "operationId": "getAllCompagne",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Classe"
                            }
                        }
                    }
                }
            }
        },
        "/client/commande/{id_commande}": {
            "get": {
                "tags": [
                    "Commande"
                ],
                "summary": "Get one commande",
                "description": "",
                "operationId": "getOneCommande",
                "parameters": [
                    {
                        "name": "id_commande",
                        "in": "path",
                        "description": "ID of the commande to return",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Commande"
                        }
                    },
                    "404": {
                        "description": "Commande not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Commande"
                ],
                "summary": "delete Commande (not implemented yet)",
                "description": "",
                "operationId": "deleteCommande",
                "parameters": [
                    {
                        "name": "id_commande",
                        "in": "path",
                        "description": "ID of the commande to delete",
                        "type": "integer",
                        "fomrat": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commande successfully deleted"
                    },
                    "404": {
                        "description": "Commande not found"
                    }
                }
            }
        },
        "/client/commande": {
            "post": {
                "tags": [
                    "Commande"
                ],
                "summary": "Create new commande.",
                "description": "when creating the commande we must set the offre(for existing offres) of the nbr_QR_code(custom commande) request field if there is no one of them so there will be an error",
                "operationId": "addCommande",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Commande"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Commande"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "Commande"
                ],
                "summary": "get all commandes",
                "description": "",
                "operationId": "getAllCommande",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Commande"
                            }
                        }
                    }
                }
            }
        },
        "/signataire/classe": {
            "post": {
                "tags": [
                    "Classe"
                ],
                "summary": "create classe for the compagne.",
                "description": "",
                "operationId": "addClasseSignataire",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request body",
                        "description": "Request fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateClasseSignataire"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Classe"
                        }
                    },
                    "402": {
                        "description": "Validation errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "Classe"
                ],
                "summary": "get all classes",
                "description": "",
                "operationId": "getAllClasse",
                "consumes": "application/json",
                "produces": "application/json",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Classe"
                            }
                        }
                    }
                }
            }
        },
        "definitions": {
            "Etablissement": {
                "required": [
                    "nom",
                    "adresse",
                    "RC",
                    "RS",
                    "NIF",
                    "NAF",
                    "NIS",
                    "url_logo"
                ],
                "properties": {
                    "nom": {
                        "type": "string"
                    },
                    "adresse": {
                        "type": "string"
                    },
                    "RC": {
                        "type": "string"
                    },
                    "RS": {
                        "type": "string"
                    },
                    "NIF": {
                        "type": "string"
                    },
                    "NAF": {
                        "type": "string"
                    },
                    "NIS": {
                        "type": "string"
                    }
                }
            },
            "Client": {
                "required": [
                    "nom",
                    "prenom",
                    "adresse",
                    "email",
                    "pseudo",
                    "mot_de_passe",
                    "nom_etablissement"
                ],
                "properties": {
                    "nom": {
                        "type": "string"
                    },
                    "adresse": {
                        "type": "string"
                    },
                    "prenom": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "mot_de_passe": {
                        "type": "string"
                    },
                    "pseudo": {
                        "type": "string"
                    },
                    "nom_etablissement": {
                        "type": "string"
                    }
                }
            },
            "Offre": {
                "required": [
                    "nom",
                    "nbr_QR_code",
                    "dur√©e"
                ],
                "properties": {
                    "nom": {
                        "type": "string"
                    },
                    "nbr_QR_code": {
                        "type": "integer"
                    },
                    "dur√©e": {
                        "type": "integer"
                    }
                }
            },
            "TypePaiment": {
                "required": [
                    "nom"
                ],
                "properties": {
                    "nom": {
                        "type": "string"
                    }
                }
            },
            "Coupon": {
                "required": [
                    "code",
                    "nbr_QR_code",
                    "nbr_utilisation",
                    "reduction",
                    "date_debut",
                    "date_fin"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "nbr_QR_code": {
                        "type": "integer"
                    },
                    "nbr_utilisation": {
                        "type": "integer"
                    },
                    "reduction": {
                        "type": "integer"
                    },
                    "date_debut": {
                        "type": "string"
                    },
                    "date_fin": {
                        "type": "string"
                    }
                }
            },
            "Signataire": {
                "required": [
                    "nom ",
                    "prenom",
                    "email",
                    "adresse",
                    "mot_de_passe",
                    "pseudo",
                    "client"
                ],
                "properties": {
                    "nom": {
                        "type": "string"
                    },
                    "prenom": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "adresse": {
                        "type": "string"
                    },
                    "pseudo": {
                        "type": "string"
                    },
                    "mot_de_passe": {
                        "type": "string"
                    },
                    "client": {
                        "type": "string"
                    }
                }
            },
            "Theme": {
                "required": [
                    "titre"
                ],
                "properties": {
                    "titre": {
                        "type": "string"
                    }
                }
            },
            "Compagne": {
                "required": [
                    "titre_compagne",
                    "description",
                    "titre_theme",
                    "id_template"
                ],
                "properties": {
                    "titre_compagne": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "titre_theme": {
                        "type": "string"
                    },
                    "id_template": {
                        "type": "string"
                    }
                }
            },
            "CompagneSignataire": {
                "required": [
                    "titre_compagne",
                    "signataires"
                ],
                "properties": {
                    "titre_compagne": {
                        "type": "string"
                    },
                    "signataires": {
                        "type": "string"
                    }
                }
            },
            "CreateClasseSignataire": {
                "required": [
                    "nom",
                    "date_debut",
                    "date_fin",
                    "description",
                    "titre_compagne",
                    "signataire"
                ],
                "properties": {
                    "nom": {
                        "type": "string"
                    },
                    "date_debut": {
                        "type": "string"
                    },
                    "date_fin": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "titre_compagne": {
                        "type": "string"
                    },
                    "signataire": {
                        "type": "string"
                    }
                }
            },
            "Cr√©eClasseSignataire": {
                "required": [
                    "nom",
                    "date_debut",
                    "date_fin",
                    "description",
                    "titre_compagne"
                ],
                "properties": {
                    "nom": {
                        "type": "string"
                    },
                    "date_debut": {
                        "type": "string"
                    },
                    "date_fin": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "titre_compagne": {
                        "type": "string"
                    }
                }
            },
            "Commande": {
                "required": [
                    "nbr_QR_code"
                ],
                "properties": {
                    "offre": {
                        "type": "string"
                    },
                    "nbr_QR_code": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}